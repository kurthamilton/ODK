@using ODK.Web.Razor.Models.Components
@model EditableContentViewModel
@{
    var editId = $"{Model.Id}-edit";
}

<section class="@Model.Class">
    @if (!string.IsNullOrEmpty(Model.Title))
    {
        <h3>@Model.Title</h3>
    }    

    @if (!Model.IsAdmin)
    {
        @Model.ViewContentFunc.Invoke(null)
        return;
    }
        
    <div id="@Model.Id">
        <div>
            @Model.ViewContentFunc.Invoke(null)
        </div>
        <button class="btn btn-link p-0" type="button"
                data-collapse-toggle-show="#@editId"
                data-collapse-toggle-hide="#@Model.Id">
            @if (Model.IsCreate)
            {
                <i class="fa-solid fa-plus"></i>
                <span>Create</span>
            }
            else
            {
                @await Html.PartialAsync("Components/Icons/_Edit")
                <span>Edit</span>
            }
        </button>
    </div>

    <div id="@editId" class="d-none">
        <form action="@Model.Action" method="post">
            @Html.AntiForgeryToken()
            <div class="form-group mb-3">
                @Model.EditContentFunc.Invoke(null)
            </div>
            <button class="btn btn-primary">
                @if (Model.IsCreate)
                {
                    @:Create
                }
                else
                {
                    @:Update
                }
            </button>
            <button class="btn btn-outline-secondary" type="button"
                    data-collapse-toggle-show="#@Model.Id"
                    data-collapse-toggle-hide="#@editId">
                Cancel
            </button>
        </form>
    </div>
</section>