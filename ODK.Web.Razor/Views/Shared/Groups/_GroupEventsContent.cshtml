@using ODK.Core.Chapters
@using ODK.Core.Events
@using ODK.Services.Chapters.ViewModels
@using ODK.Services.Events
@using ODK.Services.Events.ViewModels
@using ODK.Web.Common.Extensions
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.Events
@model GroupEventsPageViewModel
@{
    var past = Context.ForPath(OdkRoutes.Groups.PastEvents(Model.Platform, Model.Chapter));
}

@await Html.PartialAsync("Components/_TwoColLeftMenu", new TwoColLeftMenuViewModel
{
    MenuContent = await Html.PartialAsync("Groups/_GroupEventsMenu", Model),
    BodyContentFunc = 
        @<div>
            @await Html.PartialAsync("Events/_EventList", new EventListViewModel
            {
                Chapter = Model.Chapter,
                Events = Model.Events
                    .Select(x => new EventResponseViewModel(
                        @event: x.Event, 
                        venue: x.Venue, 
                        response: x.Response?.Type ?? EventResponseType.None, 
                        invited: false,
                        responseSummary: x.ResponseSummary))
                    .ToArray(),
                ForceDisplayYear = past,
                FullWidth = true,
                Platform = Model.Platform,
                TimeZone = Model.Chapter.TimeZone ?? TimeZoneInfo.FindSystemTimeZoneById(Chapter.DefaultTimeZoneId)
            })
        </div>
})
