@using ODK.Core.Chapters
@using ODK.Core.Events
@using ODK.Services.Chapters.ViewModels
@using ODK.Services.Events
@using ODK.Web.Razor.Models.Chapters
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.Events
@model GroupHomePageViewModel
@{
}

<div class="row">
    <div class="col-md-8">
        @await Html.PartialAsync("Components/_EditableTextArea", new EditableTextViewModel
        {
            Action = $"/admin/groups/{Model.Chapter.Id}/description",
            Id = "group-description",
            IsAdmin = Model.IsAdmin,
            Name = "description",
            Text = Model.Chapter.Description,
            Title = "About us"
        })

        @if (Model.UpcomingEvents.Count > 0)
        {
            <section class="section">
                <h3>Upcoming events</h3>
                @await Html.PartialAsync("Events/_EventList2", new EventListViewModel
                {
                    ChapterName = Model.Chapter.Name,
                    Events = Model.UpcomingEvents
                        .Select(x => new EventResponseViewModel(
                            x.Event, x.Venue, x.Response?.Type ?? EventResponseType.None, false))
                        .ToArray(),
                    TimeZone = Model.Chapter.TimeZone ?? TimeZoneInfo.FindSystemTimeZoneById(Chapter.DefaultTimeZoneId)
                })
            </section>
        }

        @if (Model.RecentEvents.Count > 0)
        {
            <section class="section">
                <h3>Recent events</h3>
                @await Html.PartialAsync("Events/_EventList2", new EventListViewModel
                {
                    ChapterName = Model.Chapter.Name,
                    Events = Model.RecentEvents
                        .Select(x => new EventResponseViewModel(
                            x.Event, x.Venue, x.Response?.Type ?? EventResponseType.None, false))
                        .ToArray(),
                    TimeZone = Model.Chapter.TimeZone ?? TimeZoneInfo.FindSystemTimeZoneById(Chapter.DefaultTimeZoneId)
                })
            </section>
        }

        @if (Model.Questions.Count > 0 || Model.IsAdmin)
        {
            <section class="section">
                <h3>Frequently asked questions</h3>
                @await Html.PartialAsync("Chapters/_Questions", new ChapterQuestionsViewModel
                {
                    Chapter = Model.Chapter,
                    IsAdmin = Model.IsAdmin,
                    Questions = Model.Questions
                })
            </section>
        }
    </div>    
    <div class="col-md-4">
        @await Html.PartialAsync("Groups/_GroupContentSidebar", Model)
    </div>
</div>