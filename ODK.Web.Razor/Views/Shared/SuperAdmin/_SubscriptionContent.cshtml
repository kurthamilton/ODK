@using ODK.Services.Subscriptions.ViewModels
@using ODK.Web.Common.Extensions;
@using ODK.Web.Razor.Models.SuperAdmin
@model SiteSubscriptionViewModel
@{
    var currencyDictionary = Model.Currencies.ToDictionary(x => x.Id);
}

<section class="section--admin">
    <h2>@Model.Subscription.Name</h2>
    <form action="/SuperAdmin/Subscriptions/@Model.Subscription.Id" method="post">
        @*@Html.AntiForgeryToken()*@
        @await Html.PartialAsync("SuperAdmin/_SubscriptionForm", new SiteSubscriptionFormViewModel
        {
            Description = Model.Subscription.Description,
            Enabled = Model.Subscription.Enabled,
            FallbackSiteSubscriptionId = Model.Subscription.FallbackSiteSubscriptionId,
            GroupLimit = Model.Subscription.GroupLimit,
            MemberLimit = Model.Subscription.MemberLimit,
            MemberSubscriptions = Model.Subscription.MemberSubscriptions,
            Name = Model.Subscription.Name,
            Premium = Model.Subscription.Premium,
            SendMemberEmails = Model.Subscription.SendMemberEmails,
            SitePaymentSettingId = Model.Subscription.SitePaymentSettingId,
            SitePaymentSettings = Model.SitePaymentSettings,
            SiteSubscriptionId = Model.Subscription.Id
        })
        <button class="btn btn-primary">Update</button>
    </form>
</section>

<section class="section--admin">
    <h2>Prices</h2>
    <div class="table-responsive">
        <table class="table table--striped">
            <thead>
                <tr>
                    <th>Currency</th>
                    <th>Frequency</th>
                    <th>Amount</th>
                    <th>External Id</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var price in Model.Prices.OrderBy(x => x.Amount))
                {
                    var currency = currencyDictionary[price.CurrencyId];

                    <tr>
                        <td>@currency.Code</td>
                        <td>@price.Frequency.ToString()</td>
                        <td>@currency.ToAmountString(price.Amount)</td>
                        <td>@price.ExternalId</td>
                        <td>
                            <form action="/SuperAdmin/Subscriptions/@Model.Subscription.Id/Prices/@price.Id/Delete" method="post">
                                @*@Html.AntiForgeryToken()*@
                                <button data-bs-toggle="tooltip" data-bs-title="Delete" class="btn-icon text-danger"
                                        onclick="return confirm('Are you sure you want to delete this price?');">
                                    <i class="fas fa-times"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }            
            </tbody>
        </table>
    </div>
    <div class="mt-3">
        <form action="/SuperAdmin/Subscriptions/@Model.Subscription.Id/Prices" method="post">
            @*@Html.AntiForgeryToken()*@

            <div class="form-inline">                
                @await Html.PartialAsync("SuperAdmin/_SubscriptionPriceForm", new SiteSubscriptionPriceFormViewModel
                {
                    CurrencyOptions = Model.Currencies.ToList()
                })

                <div class="form-group mb-3">
                    <label class="form-label invisible">Hidden</label>
                    <div>
                        <button class="btn btn-primary">Add</button>
                    </div>
                </div>
            </div>            
        </form>
    </div>
</section>