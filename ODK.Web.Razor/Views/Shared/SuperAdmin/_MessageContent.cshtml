@using ODK.Core.Utils
@using ODK.Services.Contact.ViewModels
@using ODK.Web.Common.Components
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.SuperAdmin
@model MessageAdminPageViewModel

@await Html.PartialAsync("Components/_Breadcrumbs", new BreadcrumbsViewModel
{
    Breadcrumbs = new[]
    {
        new MenuItem { Link = "/superadmin/messages", Text = "Messages" },
        new MenuItem { Text = "Reply" }
    }
})

<section class="section">
    <h2>Message</h2>

    <div class="form-group mb-3">
        <label class="form-label" for="from">From</label>
        <input type="text" readonly class="form-control-plaintext" id="from" value="@Model.Message.FromAddress">
    </div>

    <div class="form-group mb-3">
        <label class="form-label" for="sent">Sent</label>
        <input type="text" readonly class="form-control-plaintext" id="sent" 
            value="@Model.Message.CreatedUtc.ToFriendlyDateTimeString(Model.CurrentMember.TimeZone)">
    </div>

    <div class="form-group mb-3">
        <label class="form-label">Original message</label>
        <p>
            @Model.Message.Message
        </p>
    </div>

    @if (Model.Message.RepliedUtc != null && Model.Replies.Count == 0)
    {
        <div class="form-group mb-3">
            <label class="form-label">Replied</label>
            <p>
                @Model.Message.RepliedUtc.Value.ToFriendlyDateTimeString(Model.CurrentMember.TimeZone)
            </p>
        </div>
    }
</section>

@if (Model.Replies.Count > 0)
{
    <section class="section">
        <h3>Replies</h3>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Sent</th>
                        <th>From</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var reply in Model.Replies.OrderBy(x => x.CreatedUtc))
                    {
                        <tr>
                            <td>@reply.CreatedUtc.ToFriendlyDateTimeString(Model.CurrentMember.TimeZone)</td>
                            <td>@reply.Member?.FullName</td>
                            <td>@Html.Raw(reply.Message)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>    
}


<section class="section">
    <h3>Reply</h3>
    @if (Model.Message.RepliedUtc == null)
    {
        <div class="mb-3">
            <button type="button" class="btn btn-link p-0" data-bs-toggle="collapse" data-bs-target="#mark-replied">Already replied?</button>
            <div class="collapse" id="mark-replied">
                <form action="/superadmin/messages/@Model.Message.Id/replied" method="post">
                    @Html.AntiForgeryToken()
                    <button class="btn btn-primary">Set message as replied</button>
                </form>
            </div>            
        </div>        
    }    

    <form action="/superadmin/messages/@Model.Message.Id/reply" method="post">
        @Html.AntiForgeryToken()
        @await Html.PartialAsync("SuperAdmin/_MessageForm", new MessageReplyFormViewModel
        {
            Message = ""
        })
        <button class="btn btn-primary">Send</button>
    </form>
</section>