@using ODK.Core.Chapters
@using ODK.Services
@using ODK.Services.Chapters
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.SuperAdmin
@model ODK.Core.Chapters.Chapter
@inject IChapterAdminService ChapterAdminService
@{
    var request = new AdminServiceRequest(Model.Id, User.MemberId());
    var location = await ChapterAdminService.GetChapterLocation(request);
}

<section class="section--admin">
    <h3>Time zone</h3>

    <form action="/@Model.Name/Admin/SuperAdmin/TimeZone" method="post">
        @*@Html.AntiForgeryToken()*@
        @await Html.PartialAsync("Chapters/SuperAdmin/_TimeZoneForm", new ChapterTimeZoneFormViewModel
       {
           TimeZone = Model.TimeZone?.Id
       })
        <button class="btn btn-primary">Update</button>
    </form>
</section>

<section class="section--admin">
    <h3>Location</h3>

    <form action="/@Model.Name/Admin/SuperAdmin/Location" method="post">
        @*@Html.AntiForgeryToken()*@
        @await Html.PartialAsync("Chapters/SuperAdmin/_LocationForm", new ChapterLocationFormViewModel
        {
            Lat = location?.LatLong.Lat,
            Long = location?.LatLong.Long,
            Name = location?.Name
        })
        <button class="btn btn-primary">Update</button>
    </form>

    @if (location?.LatLong != null)
    {
        <div class="mt-3">
            @await Html.PartialAsync("Components/_GoogleMap", new GoogleMapViewModel
            {
                LatLong = location.LatLong,
                QuerySource = "#map-latlong"
            })
        </div>
    }    
</section>