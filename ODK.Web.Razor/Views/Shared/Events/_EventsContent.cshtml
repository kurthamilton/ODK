@using ODK.Services.Authentication
@using ODK.Services.Events
@using ODK.Web.Razor.Models.Events
@model ODK.Web.Razor.Models.Events.EventsContentViewModel
@inject IEventService EventService
@{
    var events = await EventService.GetEventResponseViewModels(Model.Member, Model.Chapter);
}

@if (User.IsInRole(OdkRoles.Admin) && Model.Member?.ChapterId == Model.Chapter.Id)
{
    <div class="mb-3">
        <a href="/@Model.Chapter.Name/Admin/Events" class="btn btn-outline-secondary">
            <i class="fa-solid fa-pen-to-square"></i>
            Edit
        </a>
    </div>
}

@if (events.Count > 0)
{
    @await Html.PartialAsync("Events/_EventList", new EventListViewModel(Model.Chapter, events))
}
else
{
    if (Model.Member?.IsMemberOf(Model.Chapter.Id) == true)
    {
        <p>There are no upcoming events</p>
    }
    else
    {
        <p>
            There are no upcoming public events.
            <a href="/@Model.Chapter.Name/Account/Login?returnUrl=/@Model.Chapter.Name/Events">Sign in</a>
        </p>
    }
}