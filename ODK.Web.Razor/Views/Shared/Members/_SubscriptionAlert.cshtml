@using ODK.Core.Members
@using ODK.Services.Authorization
@using ODK.Services.Caching
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Members
@using ODK.Web.Razor.Pages.Chapters
@inject IAuthorizationService AuthorizationService
@inject IRequestCache RequestCache
@{
    var memberId = User.MemberIdOrDefault();
    if (memberId == null)
    {
        return;
    }

    var member = await RequestCache.GetMemberAsync(memberId.Value);
    if (member == null)
    {
        return;
    }

    var chapter = await RequestCache.GetChapterAsync(member.ChapterId);

    var membershipSettings = await RequestCache.GetChapterMembershipSettingsAsync(member.ChapterId);
    if (membershipSettings == null)
    {
        return;
    }

    var memberSubscription = await RequestCache.GetMemberSubscriptionAsync(memberId.Value);
    if (memberSubscription == null)
    {
        return;
    }

    var status = AuthorizationService.GetSubscriptionStatus(memberSubscription, membershipSettings);
    
    var type = memberSubscription.Type == SubscriptionType.Trial ? "trial" : "subscription";
    var action = memberSubscription.Type == SubscriptionType.Trial ? "Purchase membership" : "Renew";
}

<div class="container subscription-alerts">
    @if (status == SubscriptionStatus.Expired || status == SubscriptionStatus.Disabled)
    {
        <div class="mt-3 alert alert-danger">
            Your @type has expired <a href="/@chapter.Name/Account/Subscription">@action</a>
        </div>
    }
    else if (status == SubscriptionStatus.Expiring && memberSubscription.ExpiresUtc != null)
    {
        var expiresOn = chapter.ToChapterTime(memberSubscription.ExpiresUtc.Value).ToString("d MMMM");
        <div class="mt-3 alert alert-warning">
            Your @type expires @expiresOn <a href="/@chapter.Name/Account/Subscription">@action</a>
        </div>
    }
</div>
