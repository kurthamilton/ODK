@using ODK.Core.Features
@using ODK.Web.Common.Extensions
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Components
@model ODK.Web.Razor.Models.Admin.Events.EventFormViewModel
@{    
    var venueOptions = Model.Venues
        .OrderBy(x => x.Name)
        .Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Name })
        .ToArray();
}

@*<div class="mb-3 form-check">
    @Html.OdkCheckBoxFor(x => x.Public, new { @class = "form-check-input" })
    @Html.LabelFor(x => x.Public, new { @class = "form-check-label" })
</div>*@

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Name, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Name)
</div>

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Venue, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_Tooltip", "Select an existing venue or create a new venue first on the venues page")    
    <a href="@OdkRoutes2.MemberGroups.VenueCreate(Model.Platform, Model.Chapter)">Create venue</a>
    @Html.DropDownListFor(x => x.Venue, venueOptions, "", new { @class = "form-select", data_searchable = "" })
    @Html.ValidationMessageFor(x => x.Venue)
</div>

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Date, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_Tooltip", "Event date. Start time defaults to value set in event settings")
    @if (Model.Date.Date == Model.Date)
    {
        <a href="@OdkRoutes2.MemberGroups.EventSettings(Model.Platform, Model.Chapter)">Set default start time</a>
    }    
    @Html.TextBoxFor(x => x.Date, format: "{0:dd/MM/yyyy HH:mm}", new 
    { 
        @class = "form-control", 
        data_datepicker = "", 
        data_datepicker_time = "" 
    })
    @Html.ValidationMessageFor(x => x.Date)
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.EndTime, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_Tooltip", "24 hour clock, HH:MM")
    @Html.TextBoxFor(x => x.EndTime, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.EndTime)
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.RsvpDeadline, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.RsvpDeadline, format: "{0:dd/MM/yyyy HH:mm}", new 
    { 
        @class = "form-control", 
        data_datepicker = "", 
        data_datepicker_time = ""
    })
    @Html.ValidationMessageFor(x => x.RsvpDeadline)
</div>

@*<div class="form-group mb-3">
    @Html.LabelFor(x => x.Time, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.Time, new { @class = "form-control" })
</div>*@

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Description, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_FeatureTooltip", 
        new FeatureTooltipViewModel 
        {
            Name = "Events.DefaultDescription"
        })
    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = 8, data_html_editor = "" })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.ImageUrl, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Hosts, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_FeatureTooltip", 
        new FeatureTooltipViewModel 
        {
            Name = "Events.Hosts"
        })
    @Html.ListBoxFor(x => x.Hosts, Model.HostOptions, new { @class = "form-select" })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.AttendeeLimit, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_FeatureTooltip", 
        new FeatureTooltipViewModel 
        {
            Name = "Events.AttendeeLimit"
        })
    @await Html.PartialAsync("Components/_Tooltip", 
        "Limit how many members can attend this event. For ticketed events this limits how many tickets can be bought.")
    @Html.TextBoxFor(x => x.AttendeeLimit, new { @class = "form-control", type = "number" })
    @Html.ValidationMessageFor(x => x.AttendeeLimit)
</div>

<fieldset disabled="@(Model.TicketsEnabled ? null : "")">
    <legend>
        Tickets
    </legend>
    <div class="form-group mb-3">
        @Html.LabelFor(x => x.TicketCost, new { @class = "form-label" })
        @await Html.PartialAsync("Components/_Tooltip",
                 "The total ticket cost for this event. Set the max number of attendees above to set the number of tickets.")
        <div class="input-group">
            @if (Model.CurrencySymbol != null)
            {
                <span class="input-group-text">
                    @Model.CurrencySymbol
                </span>
            }
            @Html.TextBoxFor(x => x.TicketCost, format: "{0:0.00}", new { @class = "form-control", Type = "number" })
        </div>

        @Html.ValidationMessageFor(x => x.TicketCost)
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(x => x.TicketDepositCost, new { @class = "form-label" })
        @await Html.PartialAsync("Components/_Tooltip",
                 "The deposit cost for this event. Members who pay a deposit will then only need to pay the remainder of the total cost.")
        <div class="input-group">
            @if (Model.CurrencySymbol != null)
            {
                <span class="input-group-text">
                    @Model.CurrencySymbol
                </span>
            }
            @Html.TextBoxFor(x => x.TicketDepositCost, format: "{0:0.00}", new { @class = "form-control", Type = "number" })
        </div>
        @Html.ValidationMessageFor(x => x.TicketDepositCost)
    </div>
</fieldset>
