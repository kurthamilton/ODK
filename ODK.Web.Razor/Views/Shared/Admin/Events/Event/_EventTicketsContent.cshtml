@using ODK.Services
@using ODK.Services.Chapters
@using ODK.Services.Events
@using ODK.Services.Events.ViewModels
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Admin.Events
@using ODK.Web.Razor.Models.Members
@model EventTicketsAdminPageViewModel

@await Html.PartialAsync("Admin/Events/Event/_EventBreadcrumbs", Model)
@await Html.PartialAsync("Admin/Events/Event/_EventHeader")
@await Html.PartialAsync("Admin/Events/Event/_EventAdminTabs")

@{
    if (Model.Event.TicketSettings == null)
    {
        return;
    }

    if (Model.PaymentSettings == null)
    {
        <div class="alert alert-danger">
            Chapter payment settings not set up
        </div>

        return;
    }
}

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th></th>
                <th>Member</th>
                @if (Model.Event.TicketSettings.Deposit > 0)
                {
                    <th>Deposit Paid</th>
                }                
                <th>Total Paid</th>
                <th>
                    Remaining
                </th>
            </tr>
        </thead>
        <tbody> 
            @foreach (var ticketPurchase in Model.Purchases.OrderBy(x => x.Member.FullName))
            {
                
                <tr>
                    <td width="30px" class="px-0">
                        @await Html.PartialAsync("Members/_MemberAvatar", new MemberAvatarViewModel
                        {
                            Member = ticketPurchase.Member,
                            MaxWidth = 30
                        })
                    </td>
                    <td>
                        <a href="/@Model.Chapter.Name/Admin/Members/@ticketPurchase.MemberId">@ticketPurchase.Member.FullName</a>
                    </td>
                    @if (Model.Event.TicketSettings.Deposit > 0)
                    {
                        <td>
                            @if (ticketPurchase.DepositPaid != null)
                            {
                                @Model.PaymentSettings.Currency.ToAmountString(ticketPurchase.DepositPaid.Value)
                            }                            
                        </td>
                    }
                    <td>
                        @Model.PaymentSettings.Currency.ToAmountString(ticketPurchase.TotalPaid)                                                
                    </td>
                    <td>
                        @if (ticketPurchase.PurchasedUtc == null)
                        {
                            var remaining = Model.Event.TicketSettings.Cost - ticketPurchase.TotalPaid;
                            @Model.PaymentSettings.Currency.ToAmountString(remaining)
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>