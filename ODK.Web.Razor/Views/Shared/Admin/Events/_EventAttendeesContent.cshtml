@using ODK.Core.Events
@using ODK.Core.Members
@using ODK.Services.Events
@using ODK.Services.Members
@using ODK.Web.Razor.Models.Events
@using ODK.Web.Razor.Models.Members
@model ODK.Web.Razor.Models.Admin.Events.EventViewModel
@inject IEventAdminService EventAdminService
@inject IMemberAdminService MemberAdminService
@{
    var dto = await EventAdminService.GetEventResponsesDto(Model.CurrentMember.Id, Model.Event.Id);

    var (members, responses) = (dto.Members, dto.Responses);

    var responsesDictionary = responses
        .ToDictionary(x => x.MemberId, x => x.Type);
}

@await Html.PartialAsync("Admin/Events/_EventHeader")
@await Html.PartialAsync("Admin/Events/_EventAdminTabs")

<div class="row row-cols-3 row-cols-md-6">
    @foreach (var member in members.OrderBy(x => x.FullName))
    {
        responsesDictionary.TryGetValue(member.Id, out EventResponseType response);

        <div class="col text-center overlay-container mb-3">
            @await Html.PartialAsync("Members/_MemberAvatar", new MemberAvatarViewModel(Model.Chapter, member))
            <div>
                <a href="/@Model.Chapter.Name/Admin/Members/@member.Id">@member.FullName</a>
            </div>
            <div class="d-flex justify-content-center">
                <form method="post" action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id/Attendees/@member.Id">
                    @await Html.PartialAsync("Events/_EventResponseIcon", new EventResponseIconViewModel
                    {
                        Active = response == EventResponseType.Yes,
                        ResponseType = EventResponseType.Yes,
                        ReadOnly = false
                    })
                </form>

                <form method="post" action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id/Attendees/@member.Id">
                    @await Html.PartialAsync("Events/_EventResponseIcon", new EventResponseIconViewModel
                    {
                        Active = response == EventResponseType.Maybe,
                        ResponseType = EventResponseType.Maybe,
                        ReadOnly = false
                    })
                </form>

                <form method="post" action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id/Attendees/@member.Id">
                    @await Html.PartialAsync("Events/_EventResponseIcon", new EventResponseIconViewModel
                    {
                        Active = response == EventResponseType.No,
                        ResponseType = EventResponseType.No,
                        ReadOnly = false
                    })
                </form>
            </div>
        </div>
    }
</div>