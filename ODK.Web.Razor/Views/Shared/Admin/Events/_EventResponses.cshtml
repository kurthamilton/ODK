@using ODK.Core.Events
@using ODK.Core.Members
@using ODK.Services.Events
@using ODK.Services.Members
@using ODK.Web.Razor.Models.Admin.Events
@using ODK.Web.Razor.Models.Members
@model EventViewModel
@inject IEventAdminService EventAdminService
@inject IMemberService MemberService
@{
    const int cols = 6;

    Task<IReadOnlyCollection<EventResponse>> responsesTask = EventAdminService.GetEventResponses(Model.CurrentMember.Id, Model.Event.Id);
    Task<IReadOnlyCollection<Member>> membersTask = MemberService.GetMembers(Model.CurrentMember, Model.Chapter.Id);

    await Task.WhenAll(responsesTask, membersTask);

    var memberDictionary = membersTask.Result
        .Where(x => !x.Disabled)
        .ToDictionary(x => x.Id);
    var responseDictionary = responsesTask.Result.GroupBy(x => x.ResponseTypeId).ToDictionary(x => x.Key, x => x.ToArray());
    var membersByResponse = responsesTask.Result
        .GroupBy(x => x.ResponseTypeId)
        .ToDictionary(
            group => group.Key, 
            group => group
                .Select(x => new ListMemberViewModel(Model.Chapter, memberDictionary[x.MemberId]))
                .ToArray());
}

@if (membersByResponse.ContainsKey(EventResponseType.Yes))
{
    <h5>Going</h5>
    @await Html.PartialAsync("Members/_MemberList", new MemberListViewModel(Model.Chapter, membersByResponse[EventResponseType.Yes]) 
    { 
        Size = "xs",
        Cols = cols
    })
}

@if (membersByResponse.ContainsKey(EventResponseType.Maybe))
{
    <h5>Maybe</h5>
    @await Html.PartialAsync("Members/_MemberList", new MemberListViewModel(Model.Chapter, membersByResponse[EventResponseType.Maybe])
    {
        Size = "xs",
        Cols = cols
    })
}

@if (membersByResponse.ContainsKey(EventResponseType.No))
{
    <h5>Declined</h5>
    @await Html.PartialAsync("Members/_MemberList", new MemberListViewModel(Model.Chapter, membersByResponse[EventResponseType.No])
    {
        Size = "xs",
        Cols = cols
    })
}

@if (membersByResponse.ContainsKey(EventResponseType.None))
{
    <h5>No response</h5>
    @await Html.PartialAsync("Members/_MemberList", new MemberListViewModel(Model.Chapter, membersByResponse[EventResponseType.None])
    {
        Size = "xs",
        Cols = cols
    })
}

@if (membersByResponse.ContainsKey(EventResponseType.NotInvited))
{
    <h5>Not invited</h5>
    @await Html.PartialAsync("Members/_MemberList", new MemberListViewModel(Model.Chapter, membersByResponse[EventResponseType.NotInvited])
    {
        Size = "xs",
        Cols = cols
    })
}