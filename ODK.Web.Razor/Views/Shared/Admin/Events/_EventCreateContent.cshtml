@using ODK.Services
@using ODK.Services.Chapters
@using ODK.Services.Events
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Admin.Events
@using ODK.Web.Razor.Models.Components
@model ODK.Core.Chapters.Chapter
@inject IChapterAdminService ChapterAdminService
@inject IEventAdminService EventAdminService
@{
    var memberId = User.MemberId();
    var request = new AdminServiceRequest(Model.Id, memberId);
    var settings = await ChapterAdminService.GetChapterEventSettings(request);
    var nextEventDate = await EventAdminService.GetNextAvailableEventDate(request);
    var chapterAdminMembers = await ChapterAdminService.GetChapterAdminMembers(request);
    var chapterPaymentSettings = await ChapterAdminService.GetChapterPaymentSettings(request);

    var hostOptions = chapterAdminMembers
        .Select(x => new SelectListItem
        {
            Value = x.MemberId.ToString(),
            Text = x.Member.FullName
        })
        .ToArray();
}

<h2>Create new event</h2>

<form method="post" action="/@Model.Name/Admin/Events/Create">
    @Html.AntiForgeryToken()
    
    @await Html.PartialAsync("Admin/Events/_EventForm", new EventFormViewModel
    {
        ChapterId = Model.Id,
        ChapterName = Model.Name,
        CurrencySymbol = chapterPaymentSettings?.Currency.Symbol,
        Date = nextEventDate,
        Description = settings?.DefaultDescription,
        HostOptions = hostOptions
    })
    
    <div class="button-container">
        <button type="submit" class="btn btn-primary">Create</button>
        <button type="submit" class="btn btn-secondary" name="draft" value="true">Save as draft</button>
        @await Html.PartialAsync("Components/_FeatureTooltip",
            new FeatureTooltipViewModel
            {
                Name = "Events.SaveDraft"
            })
    </div>
</form>