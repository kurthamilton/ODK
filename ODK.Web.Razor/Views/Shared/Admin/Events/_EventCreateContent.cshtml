@using ODK.Services.Chapters
@using ODK.Services.Events
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Admin.Events
@model ODK.Core.Chapters.Chapter
@inject IChapterAdminService ChapterAdminService
@inject IEventAdminService EventAdminService
@{
    var memberId = User.MemberId();

    var settings = await ChapterAdminService.GetChapterEventSettings(memberId, Model.Id);
    var nextEventDate = await EventAdminService.GetNextAvailableEventDate(memberId, Model.Id);
    if (nextEventDate == null)
    {
        nextEventDate = DateTime.Today;
    }
}

<h2>Create new event</h2>

<form method="post" action="/@Model.Name/Admin/Events/Create">
    @Html.AntiForgeryToken()
    
    @await Html.PartialAsync("Admin/Events/_EventForm", new EventFormViewModel
    {
        ChapterId = Model.Id,
        CurrentMemberId = memberId,
        Date = nextEventDate.Value,
        Description = settings?.DefaultDescription
    })
    
    <button type="submit" class="btn btn-primary">Create</button>
</form>