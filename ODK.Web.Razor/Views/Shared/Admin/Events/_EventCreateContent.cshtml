@using ODK.Core.Utils
@using ODK.Services
@using ODK.Services.Events
@using ODK.Web.Common.Components
@using ODK.Web.Common.Extensions
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Admin.Events
@using ODK.Web.Razor.Models.Components
@model ODK.Core.Chapters.Chapter
@inject IEventAdminService EventAdminService
@{
    var memberId = User.MemberId();
    var request = new AdminServiceRequest(Model.Id, memberId);    
    var viewModel = await EventAdminService.GetEventCreateViewModel(request);

    var hostOptions = viewModel.AdminMembers
        .Select(x => new SelectListItem
        {
            Value = x.MemberId.ToString(),
            Text = x.Member.FullName
        })
        .ToArray();
}

@await Html.PartialAsync("Components/_Breadcrumbs", new BreadcrumbsViewModel
{
    Breadcrumbs = new[]
    {
        new MenuItem
        {
            Link = OdkRoutes2.MemberGroups.Events(viewModel.Platform, Model),
            Text = "Events"
        },
        new MenuItem { Text = "New" }
    }
})

<h2>Create event</h2>

<form method="post" action="/@Model.Name/Admin/Events/Create">
    @Html.AntiForgeryToken()
    
    @await Html.PartialAsync("Admin/Events/_EventForm", new EventFormViewModel
    {
        Chapter = viewModel.Chapter,
        CurrencySymbol = viewModel.PaymentSettings?.Currency.Symbol,
        Date = viewModel.Date,
        Description = viewModel.EventSettings?.DefaultDescription,
        EndTime = TimeSpanUtils.ToString(viewModel.EventSettings?.DefaultEndTime),
        HostOptions = hostOptions,
        OwnerSubscription = viewModel.OwnerSubscription,
        Platform = viewModel.Platform,
        Venues = viewModel.Venues
    })
    
    <div class="button-container">
        <button type="submit" class="btn btn-primary">Create</button>
        <button type="submit" class="btn btn-secondary" name="draft" value="true">Save as draft</button>
        @await Html.PartialAsync("Components/_FeatureTooltip",
            new FeatureTooltipViewModel
            {
                Name = "Events.SaveDraft"
            })
    </div>
</form>