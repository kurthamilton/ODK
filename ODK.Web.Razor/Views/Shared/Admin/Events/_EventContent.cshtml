@using ODK.Core.Members
@using ODK.Core.Utils
@using ODK.Services.Events.ViewModels
@using ODK.Web.Razor.Models.Admin.Events
@model EventEditAdminPageViewModel
@{
    var hostOptions = Model.ChapterAdminMembers
        ?.Select(x => new SelectListItem
        {
            Value = x.MemberId.ToString(),
            Text = x.Member.FullName
        })
        .ToArray() ?? [];
}

@await Html.PartialAsync("Admin/Events/_EventHeader", Model)

@await Html.PartialAsync("Admin/Events/_EventAdminTabs", Model)

@if (Model.Event.PublishedUtc == null)
{
    <form action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id/Publish" method="post">
        <div class="mb-3">
            <button class="btn btn-primary" type="submit">
                <i class="fa-solid fa-upload"></i>
                Publish
            </button>
        </div>
    </form>
}

<form method="post" action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id">
    @Html.AntiForgeryToken()    
    @await Html.PartialAsync("Admin/Events/_EventForm", new EventFormViewModel
    {
        AttendeeLimit = Model.Event.AttendeeLimit,
        ChapterId = Model.Chapter.Id,
        ChapterName = Model.Chapter.Name,
        CurrencySymbol = Model.Currency?.Symbol,
        Date = Model.Event.ToLocalTime(Model.Chapter.TimeZone),
        Description = Model.Event.Description,
        EndTime = TimeSpanUtils.ToString(Model.Event.EndTime),
        Hosts = Model.Hosts?.Select(x => x.MemberId).ToList() ?? [],
        HostOptions = hostOptions,
        ImageUrl = Model.Event.ImageUrl,
        Name = Model.Event.Name,
        OwnerSubscription = Model.OwnerSubscription,
        Public = Model.Event.IsPublic,
        RsvpDeadline = Model.Event.RsvpDeadlineUtc != null ? Model.Chapter.ToChapterTime(Model.Event.RsvpDeadlineUtc.Value) : null,
        TicketCost = Model.Event.TicketSettings?.Cost,
        TicketDepositCost = Model.Event.TicketSettings?.Deposit,
        Time = Model.Event.Time,
        Venue = Model.Event.VenueId,
        Venues = Model.Venues
    })
    
    <div class="d-flex">
        <button type="submit" class="btn btn-primary me-auto">Update</button>
        <button type="button" class="btn btn-danger"
                data-submit="#event-delete-form"
                data-submit-confirm="Are you sure you want to delete this event?">
            Delete
        </button>
    </div>
</form>

<form method="post" action="/@Model.Chapter.Name/Admin/Events/@Model.Event.Id/Delete"
      id="event-delete-form">
</form>