@using ODK.Core.Events
@using ODK.Services.Events
@using ODK.Services.Members.ViewModels
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Admin.Members
@using ODK.Web.Razor.Models.Events;
@using ODK.Services.Events.ViewModels
@model MemberEventsAdminPageViewModel
@{
    var responses = Model.Responses
        .OrderByDescending(x => x.Date);
}

@await Html.PartialAsync("Admin/Members/_MemberBreadcrumbs", Model)

@await Html.PartialAsync("Admin/Members/_MemberAdminTabs", Model)

<p>
    Events are included below if this member was either invited by email, or has responded via the website.
</p>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Date</th>
            <th>Venue</th>
            <th>Response</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var response in responses)
        {
            <tr>
                <td>
                    <a href="@OdkRoutes.MemberGroups.Event(Model.Platform, Model.Chapter, response.EventId)">
                        @response.Date.ToString("yyyy-MM-dd")
                    </a>
                </td>
                <td>
                    @if (response.VenueId != null && !string.IsNullOrEmpty(response.VenueName))
                    {
                        <a href="@OdkRoutes.MemberGroups.Venue(Model.Platform, Model.Chapter, response.VenueId.Value)">
                            @response.VenueName
                        </a>
                    }                 
                </td>
                <td>
                    @await Html.PartialAsync("Events/_EventResponseIcon", new EventResponseIconViewModel
                    {
                        Active = true,
                        ReadOnly = true,
                        CurrentResponse = response.Response
                    })
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>