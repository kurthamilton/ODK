@using ODK.Core.Events
@using ODK.Services.Events
@using ODK.Web.Razor.Models.Events
@model ODK.Web.Razor.Models.Admin.Members.MemberViewModel
@inject IEventService EventService
@{
    IReadOnlyCollection<EventResponseViewModel> responses = await EventService.GetEventResponseViewModels(Model.Member, 
        Model.Chapter.Id, null);
}

@await Html.PartialAsync("Admin/Members/_MemberAdminTabs", Model)

<p>
    Events are included below if this member was either invited by email, or has responded via the website.
</p>

<table class="table table-striped">
    <thead>
    <tr>
        <th>Date</th>
        <th>Venue</th>
        <th>Response</th>
    </tr>
    </thead>
    <tbody>
    @foreach (EventResponseViewModel response in responses
        .Where(x => x.Invited || x.Response != EventResponseType.None)
        .OrderByDescending(x => x.Date))
    {
        <tr>
            <td>
                <a href="/@Model.Chapter.Name/Admin/Events/@response.EventId">
                    @response.Date.ToString("yyyy-MM-dd")
                </a>
            </td>
            <td>
                @if (response.VenueId != null && !string.IsNullOrEmpty(response.VenueName))
                {
                    <a href="/@Model.Chapter.Name/Admin/Events/Venue/@response.VenueId">
                        @response.VenueName
                    </a>
                }                 
            </td>
            <td>
                @await Html.PartialAsync("Events/_EventResponseIcon", new EventResponseIconViewModel
                {
                    Active = true,
                    ReadOnly = true,
                    ResponseType = response.Response
                })
            </td>
        </tr>
    }
    </tbody>
</table>