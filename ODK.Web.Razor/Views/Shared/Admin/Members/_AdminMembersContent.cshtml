@using ODK.Core.Chapters
@using ODK.Core.Members
@using ODK.Services
@using ODK.Services.Chapters
@using ODK.Services.Members
@using ODK.Services.Members.ViewModels
@using ODK.Web.Common.Extensions
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Admin.Members
@model AdminMembersAdminPageViewModel
@{    
    var adminMemberDictionary = Model.AdminMembers
        .ToDictionary(x => x.MemberId);
    var memberDictionary = Model.Members
        .ToDictionary(x => x.Id);

    var adminMemberOptions = Model.Members
        .Where(x => !adminMemberDictionary.ContainsKey(x.Id))
        .OrderBy(x => x.FullName)
        .Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.FullName });
}

<h2>Admin members</h2>
<p>
    <a href="#" data-bs-toggle="collapse" data-bs-target="#add-admin-member-form">
        Add new
    </a>
</p>
<form method="post" action="/groups/@Model.Chapter.Id/members/admins"
      id="add-admin-member-form"
      class="collapse row row-cols-lg-auto g-3 mb-3">
    @Html.AntiForgeryToken()
    @await Html.PartialAsync("Admin/Members/_AdminMemberAddForm", new AdminMemberAddFormViewModel
    {
        AdminMemberOptions = adminMemberOptions.ToArray()
    })
    <div class="col-12">
        <button class="btn btn-primary">Add</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Name</th>
            <th>Admin email address</th>
            <th>Receive contact emails</th>
            <th>Receive new member emails</th>
            <th>Send new member emails</th>
            <th>Receive event comment emails</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var adminMember in Model.AdminMembers.OrderBy(x => x.Member.FullName))
        {
            var member = adminMember.Member;

            <tr>
                <td>
                    <a href="@OdkRoutes2.MemberGroups.MemberAdmin(Model.Platform, Model.Chapter, adminMember)">@member.FullName</a>
                </td>
                <td>@adminMember.AdminEmailAddress</td>
                <td>
                    @if (adminMember.ReceiveContactEmails)
                    {
                        <i class="fa fa-check"></i>
                    }
                </td>
                <td>
                    @if (adminMember.ReceiveNewMemberEmails)
                    {
                        <i class="fa fa-check"></i>
                    }
                </td>
                <td>
                    @if (adminMember.SendNewMemberEmails)
                    {
                        <i class="fa fa-check"></i>
                    }
                </td>
                <td>
                    @if (adminMember.ReceiveEventCommentEmails)
                    {
                        <i class="fa fa-check"></i>
                    }
                </td>
                <td>
                    @if (Model.Chapter.OwnerId != adminMember.MemberId)
                    {
                        <form method="post" action="/groups/@Model.Chapter.Id/members/admins/@member.Id/delete">
                            <button data-bs-toggle="tooltip" data-bs-title="Remove"
                                    class="btn-icon text-danger"
                                    onclick="return confirm('Are you sure you want to remove admin access for this member?');">
                                <i class="fas fa-times"></i>
                            </button>
                        </form>
                    }          
                    else
                    {
                        <i class="fa-solid fa-star text-warning" data-bs-toggle="tooltip" data-bs-title="Owner"></i>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>