@using ODK.Core.Images
@using ODK.Core.Members
@using ODK.Services.Imaging
@using ODK.Services.Members
@using ODK.Web.Common.Extensions
@model ODK.Core.Chapters.Chapter
@inject IImageService ImageService
@inject IMemberAdminService MemberAdminService
@{
    var memberId = User.MemberId();

    var members = await MemberAdminService.GetMembers(memberId, Model.Id);
    var memberAvatars = await MemberAdminService.GetMemberAvatars(memberId, Model.Id);

    var memberDictionary = members.ToDictionary(x => x.Id);
    var memberAvatarDictionary = memberAvatars.ToDictionary(x => x.MemberId);
}

<h2>Member Avatars</h2>

<form action="/@Model.Name/Members/Avatars/Resize" method="post">
    <button class="btn btn-primary">Resize all</button>
</form>

<p>Convert missing avatars ((@members.Count - @memberAvatarDictionary.Count))</p>

@foreach (var member in members)
{
    if (memberAvatarDictionary.ContainsKey(member.Id))
    {
        continue;
    }

    var memberImage = await MemberAdminService.GetMemberImage(memberId, Model.Id, member.Id);
    if (memberImage == null)
    {
        continue;
    }

    var imageDataUrl = ImageHelper.ToDataUrl(memberImage.ImageData, memberImage.MimeType);


    <div class="mb-5">
        <form action="/@Model.Name/Admin/Members/@member.Id/Avatar" method="post">
            <div data-img-container>
                <img src="@imageDataUrl" data-img-resize />
                <input type="hidden" name="cropX" data-img-crop-x />
                <input type="hidden" name="cropY" data-img-crop-y />
                <input type="hidden" name="cropWidth" data-img-crop-width />
                <input type="hidden" name="cropHeight" data-img-crop-height />
                <button class="btn btn-primary">Update</button>
            </div>
        </form>
    </div>

    break;
}