@using ODK.Core.Emails
@using ODK.Services
@using ODK.Services.Emails
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Admin.Chapters
@model ODK.Core.Chapters.Chapter
@inject IEmailAdminService EmailAdminService
@{
    var memberId = User.MemberId();

    var request = new AdminServiceRequest(Model.Id, memberId);
    var emails = await EmailAdminService.GetChapterEmails(request);
    var settings = await EmailAdminService.GetChapterEmailSettings(request);
}

<h2>Email templates</h2>
<p>
    The emails sent by the site use the templates below. 
    Default templates already exist and can be overridden if you want to include chapter-specific content.
</p>
<div class="alert alert-warning">
    CAUTION: it is best not to update these templates unless you know what you are doing!
</div>
<table class="table table-striped">
    <thead>
    <tr>
        <th>Email</th>
        <th>Custom</th>
    </tr>
    </thead>
    <tbody>
    @foreach (ChapterEmail email in emails.OrderBy(x => x.Type.ToString()))
    {
        <tr>
            <td>
                <a href="/@Model.Name/Admin/Chapter/Emails/@email.Type">@email.Type</a>
            </td>
            <td>
                @if (email.IsDefault())
                {
                    <span class="text-muted">Default</span>
                }
                else
                {
                    <span>
                        <i class="fas fa-check-circle text-success"></i>
                    </span>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<h2>Sender</h2>
<form action="/@Model.Name/Admin/Chapter/Emails/Settings" method="post">
    @await Html.PartialAsync("Admin/Chapter/_EmailSettingsForm", new ChapterEmailSettingsFormViewModel
    {
        FromAddress = settings?.FromEmailAddress ?? "",
        FromName = settings?.FromName ?? ""
    })
    <button class="btn btn-primary">Update</button>
</form>