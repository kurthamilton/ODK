@using ODK.Core.Chapters
@using ODK.Core.Utils
@using ODK.Services.Chapters
@using ODK.Services.Members
@using ODK.Services.Subscriptions
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models.Admin.Chapters
@using ODK.Web.Razor.Models.Payments
@model ChapterSubscriptionViewModel
@{
    var subscription = Model.Current;
}

<section class="section mt-0 mb-3">
    <h3>Current subscription</h3>
    @if (subscription != null)
    {
        var nextPaymentDate = subscription.ExpiresUtc != null
        ? subscription.ExpiresUtc.Value.ToFriendlyDateString(Model.Chapter.TimeZone)
        : "-";
        <p>
            @subscription.SiteSubscription.Name
        </p>
        <div class="form-group">
            <label for="next-payment-date" class="form-label">Next payment date</label>
            <input id="next-payment-date" type="text" readonly class="form-control-plaintext" value="@nextPaymentDate">
        </div>
    }
    else
    {
        <p>None</p>
    }
</section>

<h3>Change subscription</h3>
@if (Model.SiteSubscriptions.Currency != null)
{
    @await Html.PartialAsync("Pricing/_PricingContent", Model.SiteSubscriptions)
}
else
{
    var currencyOptions = Model.SiteSubscriptions.Currencies
        .Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Code })
        .OrderBy(x => x.Text)
        .ToArray();
    
    <form action="/@Model.Chapter.Name/Admin/Chapter/Currency" method="post">
        @Html.AntiForgeryToken()
        <div class="form-group mb-3">
            @Html.Label("currencyId", "Choose currency", new { @class = "form-label" })
            @Html.DropDownList("currencyId", currencyOptions, "", new { @class = "form-select" })
        </div>
        
        <button class="btn btn-primary">Update</button>
    </form>
}