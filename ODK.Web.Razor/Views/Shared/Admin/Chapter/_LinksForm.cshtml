@using ODK.Core.Features
@using ODK.Web.Razor.Models.Admin.Chapters
@using ODK.Web.Razor.Models.Components
@model ChapterLinksFormViewModel

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Facebook, new { @class = "form-label" })
    <div class="input-group">
        <span class="input-group-text">
            <i class="fab fa-facebook-f"></i>
        </span>
        @Html.TextBoxFor(x => x.Facebook, new { @class = "form-control" })
    </div>
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Instagram, new { @class = "form-label" })
    <div class="input-group">
        <span class="input-group-text">
            <i class="fab fa-instagram"></i>
        </span>
        @Html.TextBoxFor(x => x.Instagram, new { @class = "form-control" })
    </div>
</div>

<div class="form-group mb-3">
    @await Html.PartialAsync("Components/_RestrictedFeature", new RestrictedFeatureViewModel(Model.OwnerSubscription)
    {
        Chapter = Model.Chapter,
        Feature = SiteFeatureType.InstagramFeed,
        ContentFunc =
            @<div class="form-check form-switch mb-3">
                @Html.CheckBoxFor(x => x.ShowInstagramFeed, new { @class = "form-check-input", role = "switch" })
                @Html.LabelFor(x => x.ShowInstagramFeed, new { @class = "form-check-label" })
            </div>,
        DisabledContentFunc = 
            @<div>
                <div class="form-check form-switch mb-3">
                    @Html.HiddenFor(x => x.ShowInstagramFeed)
                    @Html.CheckBoxFor(x => x.ShowInstagramFeed, new { @class = "form-check-input", role = "switch", disabled = "" })
                    @Html.LabelFor(x => x.ShowInstagramFeed, new { @class = "form-check-label" })                    
                </div>
            </div>
    })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Twitter, new { @class = "form-label" })
    <div class="input-group">
        <span class="input-group-text">
            <i class="fab fa-x-twitter"></i>
        </span>
        @Html.TextBoxFor(x => x.Twitter, new { @class = "form-control" })
    </div>
</div>