@using ODK.Services.Members
@using ODK.Web.Razor.Models.Account
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.Members
@model ODK.Web.Razor.Models.Account.AccountContentViewModel
@inject IMemberService MemberService
@{
    if (!Model.CurrentMember.IsMemberOf(Model.Chapter.Id))
    {
        return;
    }

    var avatar = await MemberService.GetMemberAvatar(null, Model.CurrentMember.Id);
}

<div class="row row-cols-2">
    <div class="col">
        <div>
            <a href="/@Model.Chapter.Name/Account/Subscription">My subscription</a>
        </div>
        <div>
            <a href="/@Model.Chapter.Name/Account/Password/Change">Change password</a>
        </div>
        <div>
            <a href="/@Model.Chapter.Name/Account/Email/Change">Update email address</a>
        </div>
        <div>
            <a href="/@Model.Chapter.Name/Account/Emails">Email preferences</a>
        </div>
        <div>
            <a href="/@Model.Chapter.Name/Account/Delete">Delete my account</a>
        </div>
        <div class="my-3" data-theme-selector-container>
            <button type="button" class="d-flex align-items-center btn btn-outline-light d-none me-3"
                    data-theme-selector="light">
                <i class="fa-solid fa-sun me-2"></i>
                <span>Light mode</span>
            </button>
            <button type="button" class="d-flex align-items-center btn btn-outline-dark me-3"
                    data-theme-selector="dark">
                <i class="fa-solid fa-moon me-2"></i>
                <span>Dark mode</span>
            </button>
        </div>
    </div>

    <div class="col">
        <div class="form-group text-end">
            <div class="d-inline-block">
                <div class="d-flex justify-content-end">
                    @await Html.PartialAsync("Members/_MemberImage", new MemberImageViewModel(Model.Chapter, Model.CurrentMember))
                </div>                
                
                <div class="d-flex justify-content-center">
                    <div class="d-flex">
                        <button class="btn btn-link" type="button" data-bs-toggle="modal" data-bs-target="#change-picture-modal">
                            Change picture
                        </button>                                                

                        <form class="d-flex align-items-center" method="post" action="/@Model.Chapter.Name/Account/Picture/Rotate">
                            <button class="btn-icon" data-bs-toggle="tooltip" data-bs-title="Rotate right">
                                <i class="fas fa-undo flip-horizontal"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("Components/_Modal", new ModalViewModel
{
    Id = "change-picture-modal",
    Title = "Change picture",
    Size = "modal-lg",
    Body =
    @<div>
        <form method="post" action="/@Model.Chapter.Name/Account/Picture/Change" enctype="multipart/form-data">
            @await Html.PartialAsync("Account/_PictureUpload", new PictureUploadViewModel
            {
                Chapter = Model.Chapter,
                CropHeight = avatar.Value?.CropHeight,
                CropWidth = avatar.Value?.CropWidth,
                CropX = avatar.Value?.CropX,
                CropY = avatar.Value?.CropY,
                MemberId = Model.CurrentMember.Id
            })

            <div class="d-flex justify-content-end mt-3">
                <button class="btn btn-primary">Update</button>
            </div>
        </form>
    </div>
})

<form method="post">
    @Html.AntiForgeryToken()

    @await Html.PartialAsync("Account/_ProfileForm", new ProfileFormViewModel
    {
        ChapterId = Model.Chapter.Id,
        DateJoined = Model.CurrentMember.MemberChapter(Model.Chapter.Id).CreatedUtc,
        EmailAddress = Model.CurrentMember.EmailAddress,
        FirstName = Model.CurrentMember.FirstName,
        LastName = Model.CurrentMember.LastName,
        MemberId = Model.CurrentMember.Id
    })

    <button type="submit" class="btn btn-primary">Update</button>
</form>