@using ODK.Core.Chapters
@using ODK.Core.Countries
@using ODK.Core.Members
@using ODK.Services.Chapters
@using ODK.Services.Countries
@using ODK.Services.Members
@using ODK.Web.Razor.Models
@model ODK.Web.Razor.Models.Account.SubscriptionContentViewModel
@inject IChapterService ChapterService
@inject ICountryService CountryService
@inject IMemberService MemberService
@{
    var memberSubscriptionTask = MemberService.GetMemberSubscription(Model.CurrentMember.Id);
    var chapterSubscriptionsTask = ChapterService.GetChapterSubscriptions(Model.Chapter.Id);
    var countryTask = CountryService.GetCountry(Model.Chapter.CountryId);
    var paymentSettingsTask = ChapterService.GetChapterPaymentSettings(Model.CurrentMember.Id, Model.Chapter.Id);

    await Task.WhenAll(memberSubscriptionTask, chapterSubscriptionsTask, countryTask, paymentSettingsTask);

    var memberSubscription = memberSubscriptionTask.Result;
    var chapterSubscriptions = chapterSubscriptionsTask.Result;
    var country = countryTask.Result;
    var paymentSettings = paymentSettingsTask.Result;

    if (memberSubscription == null)
    {
        return;
    }

    string title = memberSubscription.Type == SubscriptionType.Trial ? "Purchase membership" : "Renew membership";
}

<div class="form-group mb-3">
    <label class="form-label">Membership type</label>
    <div class="form-control-plaintext">
        @memberSubscription.Type
    </div>
</div>

<div class="form-group mb-3">
    <label class="form-label">End date</label>
    <div class="form-control-plaintext">
        @(memberSubscription.ExpiryDate?.ToString("d MMMM yyyy") ?? "-")
    </div>
</div>

<h3>@title</h3>

@foreach (ChapterSubscription chapterSubscription in chapterSubscriptions)
{
    <div class="mb-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@chapterSubscription.Title</h5>
                <div class="card-text">
                    @Html.Raw(chapterSubscription.Description)
                </div>
                <div>
                    <button class="btn btn-primary mr-1" data-bs-toggle="modal" data-bs-target="#payment-modal">Purchase</button>
                    <span>@country.CurrencySymbol@chapterSubscription.Amount.ToString("0.00")</span>
                    
                    <div class="modal" tabindex="-1" id="payment-modal">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">@title</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @if (paymentSettings?.Provider == "PayPal")
                                    {
                                        <form method="post" action="/@Model.Chapter.Name/Account/Subscription/Purchase">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="subscriptionId" value="@chapterSubscription.Id" />
                                            @await Html.PartialAsync("Payments/_PayPalForm", new PayPalFormViewModel(paymentSettings, country,
                                                       chapterSubscription.Amount, chapterSubscription.Title))
                                        </form>
                                    }
                                    else if (paymentSettings?.Provider == "Stripe")
                                    {
                                        <div class="alert alert-danger">
                                            Payment provider not supported
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}