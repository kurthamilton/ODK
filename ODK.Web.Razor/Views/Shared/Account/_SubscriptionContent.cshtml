@using ODK.Core.Chapters
@using ODK.Core.Countries
@using ODK.Core.Extensions
@using ODK.Core.Members
@using ODK.Services.Chapters
@using ODK.Services.Members
@using ODK.Web.Common.Extensions
@using ODK.Web.Razor.Models
@using ODK.Web.Razor.Models.Components
@using ODK.Web.Razor.Models.Payments
@model ODK.Web.Razor.Models.Account.SubscriptionContentViewModel
@inject IChapterService ChapterService
@{
    var memberId = User.MemberId();
    var dto = await ChapterService.GetChapterMemberSubscriptionsDto(memberId, Model.Chapter);
    
    var (memberSubscription, chapterSubscriptions, paymentSettings, currency) = 
        (dto.MemberSubscription, dto.ChapterSubscriptions, dto.PaymentSettings, dto.PaymentSettings.Currency);
    
    if (memberSubscription == null)
    {
        return;
    }

    var title = memberSubscription.Type == SubscriptionType.Trial 
        ? "Purchase membership" 
        : "Renew membership";
}

<div class="form-group mb-3">
    <label class="form-label">Membership type</label>
    <div class="form-control-plaintext">
        @memberSubscription.Type
    </div>
</div>

<div class="form-group mb-3">
    <label class="form-label">End date</label>
    <div class="form-control-plaintext">
        @if (memberSubscription.ExpiresUtc != null)
        {
            <span>
                @TimeZoneEntityExtensions.ToLocalTime(Model.Chapter, memberSubscription.ExpiresUtc.Value).ToString("d MMMM yyyy")
            </span>
        }
        else
        {
            <span>-</span>
        }
    </div>
</div>

<h3>@title</h3>

@foreach (var chapterSubscription in chapterSubscriptions)
{
    var modalId = $"payment-modal-{chapterSubscription.Id}";

    <div class="mb-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@chapterSubscription.Title</h5>
                <div class="card-text">
                    @Html.Raw(chapterSubscription.Description)
                </div>
                <div>
                    <button class="btn btn-primary mr-1" data-bs-toggle="modal" data-bs-target="#@modalId">Purchase</button>
                    <span>@currency.ToAmountString(chapterSubscription.Amount)</span>
                    
                    @await Html.PartialAsync("Payments/_PaymentModal", new PaymentModalViewModel
                    {
                        Action = $"/{Model.Chapter.Name}/Account/Subscription/Purchase",
                        ChapterPaymentSettings = Model.ChapterPaymentSettings,
                        FormContentFunc =
                            @<input type="hidden" name="subscriptionId" value="@chapterSubscription.Id" />,
                        Id = modalId,
                        PaymentForm = new PaymentFormViewModel
                        {
                            Amount = (decimal)chapterSubscription.Amount,
                            Currency = currency,
                            Description = chapterSubscription.Title,
                            Id = chapterSubscription.Id.ToString()
                        },
                        Title = title
                    })

                </div>
            </div>
        </div>
    </div>
}

@await Html.PartialAsync("Components/_PaymentScripts", paymentSettings)