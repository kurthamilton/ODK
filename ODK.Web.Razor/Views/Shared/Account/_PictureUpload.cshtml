@using ODK.Core.Images
@using ODK.Services.Members
@using ODK.Web.Common.Extensions
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Account
@inject IMemberService MemberService
@model PictureUploadViewModel
@{
    var memberId = User.MemberIdOrDefault();
    var imageSrc = Model.MemberImage != null
        ? ImageHelper.ToDataUrl(Model.MemberImage.ImageData, Model.MemberImage.MimeType)
        : memberId != null
            ? OdkRoutes.Members.Image(memberId.Value)
            : null;

    var htmlAttributes = new Dictionary<string, object>
    {
        { "type", "file" },
        { "accept", "image/*" },
        { "class", "form-control" },
        { "data-img-input", "" }        
    };

    if (memberId == null)
    {
        htmlAttributes.Add("data-val", "true");
        htmlAttributes.Add("data-val-required", "A picture is required");
    }
}

<div data-img-container>
    @Html.HiddenFor(x => x.CropHeight, new { data_img_crop_height = "" })
    @Html.HiddenFor(x => x.CropWidth, new { data_img_crop_width = "" })
    @Html.HiddenFor(x => x.CropX, new { data_img_crop_x = "" })
    @Html.HiddenFor(x => x.CropY, new { data_img_crop_y = "" })
    
    @Html.TextBoxFor(x => x.Image, htmlAttributes)
    @Html.ValidationMessageFor(x => x.Image)

    <div class="mt-3 @(string.IsNullOrEmpty(imageSrc) ? "d-none" : null)" data-img-preview-container>
        <img src="@imageSrc" data-img-preview data-img-resize />
    </div>            
</div>