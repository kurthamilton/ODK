@using Microsoft.AspNetCore.Mvc.TagHelpers
@using ODK.Core.Chapters
@using ODK.Core.Countries
@using ODK.Core.Platforms
@using ODK.Core.Utils
@using ODK.Core.Web
@using ODK.Services.Caching
@using ODK.Web.Razor.Pages.Chapters
@inject IPlatformProvider PlatformProvider
@inject IRequestCache RequestCache
@inject IHttpRequestProvider HttpRequestProvider
@{
    var platform = PlatformProvider.GetPlatform();
    var context = new ChapterPageContext(RequestCache, Context);
    var chapter = await context.GetChapterAsync();
    var title = platform switch
    {
        PlatformType.DrunkenKnitwits => "Drunken Knitwits",
        _ => "SITE NAME"
    };

    if (chapter != null)
    {
        title = $"{chapter.Name} {title}";
    }

    var pageTitle = ViewData["Title"] as string;
    if (!string.IsNullOrEmpty(pageTitle))
    {
        title = $"{pageTitle} | {title}";
    }

    var canonicalUrlPath = ViewData["Path"] as string;
    var canonicalUrl = canonicalUrlPath != null
        ? UrlUtils.BaseUrl(HttpRequestProvider.RequestUrl) + canonicalUrlPath
        : null;

    var description = ViewData["Description"] as string;

    var keywords = ViewData["Keywords"] as IReadOnlyCollection<string>;

    var location = ViewData["Location"] as ILocation;

    var keywordDescription = "";
    if (keywords != null && keywords.Count > 0)
    {
        keywordDescription = string.Join(", ", keywords);

        if (location != null)
        {
            keywordDescription += $" in {location.Name}";
        }

        keywordDescription += ".";
    }    

    description = $"{keywordDescription} {description}".Trim();
}

<!DOCTYPE html>
<html lang="en" data-theme-root data-platform="@(platform == PlatformType.DrunkenKnitwits ? "odk" : null)">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@title</title>    
    @if (!string.IsNullOrEmpty(description))
    {
        <meta name="description" content="@description" />
    }

    @if (!string.IsNullOrEmpty(canonicalUrl))
    {
        if (!canonicalUrl.EndsWith("/"))
        {
            canonicalUrl += "/";
        }

        <link rel="canonical" href="@canonicalUrl.ToLowerInvariant()">
    }

    @if (location != null)
    {
        <meta name="geo.placename" content="@location.Name" />
        <meta name="geo.position" content="@location.LatLong.Lat;@location.LatLong.Long" />
        <meta name="ICBM" content="@location.LatLong.Lat,@location.LatLong.Long" />
    }

    @await RenderSectionAsync("meta", required: false)

    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">        
    
    <script src="~/js/odk.bundle.head.js" asp-append-version="true"></script>
    <link rel="stylesheet" href="/css/odk.bundle.lib.css" asp-append-version="true" />

    @await RenderSectionAsync("preStyles", required: false)
    
    @if (platform == PlatformType.DrunkenKnitwits)
    {
        <link rel="stylesheet" href="~/css/odk.min.css" asp-append-version="true" />
    }
    else
    {
        <link rel="stylesheet" href="~/css/main.min.css" asp-append-version="true" />
    }

    @await RenderSectionAsync("styles", required: false)
</head>
<body>   
    @await Html.PartialAsync("Header/_SiteHeader")

    @await RenderSectionAsync("header")

    @RenderBody()

    @await RenderSectionAsync("footer", required: false)
    
    @await Html.PartialAsync("Feedback/_Notifications")

    <script src="~/lib/tinymce/tinymce.min.js" asp-append-version="true"></script>
    <script src="~/js/odk.bundle.js" asp-append-version="true"></script>
    @await RenderSectionAsync("scripts", required: false)
</body>
</html>