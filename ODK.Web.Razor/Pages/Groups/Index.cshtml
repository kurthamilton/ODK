@page "/groups"
@using ODK.Core.Countries
@using ODK.Services.Chapters
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Components
@model IndexModel
@inject IChapterViewModelService ChapterViewModelService
@{
    Layout = "_HomeLayout";
    Model.Title = "Groups";

    var filter = new GroupFilter
    { 
        Distance = Model.Distance,
        DistanceUnit = Model.DistanceUnit,
        Location = Model.Lat != null && Model.Long != null 
            ? new LatLong(Model.Lat.Value, Model.Long.Value) 
            : default(LatLong?),
        LocationName = Model.LocationName,
        TopicGroup = Model.TopicGroup
    };

    var viewModel = await ChapterViewModelService.FindGroups(Model.CurrentMemberIdOrDefault, filter);
}

@await Html.PartialAsync("Components/_Body", new BodyViewModel
{
    Title = "Groups",
    ContentFunc =
        @<div>
            <div class="d-md-flex">
                <div>
                    <form method="get">
                        @await Html.PartialAsync("Groups/_GroupSearchForm", viewModel)
                    </form>
                </div>
                <div class="ps-md-5 pt-5 pt-md-0 flex-grow-1">
                    @if (viewModel.Groups.Count > 0)
                    {
                        <div class="d-flex flex-column gap-3">
                            @foreach (var group in viewModel.Groups)
                            {
                                @await Html.PartialAsync("Chapters/_ChapterWithLocationTile", group)
                            }
                        </div>
                    }
                    else
                    {
                        <p>
                            No matching results. 
                            <a href="@OdkRoutes.MemberGroups.GroupCreate(viewModel.Platform)">Create a group</a>
                        </p>
                    }
                </div>
            </div>                        
        </div>
})

@section scripts
{
    @await Html.PartialAsync("Components/Scripts/_GoogleLocation")
}