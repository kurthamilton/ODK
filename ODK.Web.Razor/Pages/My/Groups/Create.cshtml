@page "/my/groups/new"
@using ODK.Core.Members
@using ODK.Services.Chapters
@using ODK.Web.Common.Components
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Account
@using ODK.Web.Razor.Models.Chapters
@using ODK.Web.Razor.Models.Components
@model CreateModel
@inject IChapterViewModelService ChapterViewModelService
@{
    Layout = "_HomeLayout";
    Model.Title = "Create group";

    var viewModel = await ChapterViewModelService.GetChapterCreate(Model.CurrentMemberId);
}

@await Html.PartialAsync("Components/_Body", new BodyViewModel
{
    Title = "Create group",
    WidthClass = "col-12 col-lg-8",
    Breadcrumbs = new[]
    {
        new MenuItem { Link = OdkRoutes.MemberGroups.Index(viewModel.Platform), Text = "My groups" },
        new MenuItem { Text = "Create" }
    },
    ContentFunc = 
        @<div>
            @if (viewModel.ChapterCount == viewModel.ChapterLimit)
            {
                <div class="alert alert-danger">
                    You cannot create another group as you have reached your group limit of @viewModel.ChapterLimit.
                </div>
                return;
            }
            else if (viewModel.ChapterCount > 0 && viewModel.ChapterLimit != null)
            {
                <div class="alert alert-warning">
                    TODO: warning
                </div>
            }
                        
            <form method="post">
                @Html.AntiForgeryToken()

                @await Html.PartialAsync("Groups/_GroupCreateForm", new CreateChapterFormViewModel
                {
                    Location = new LocationFormViewModel
                    {
                        Lat = viewModel.MemberLocation?.LatLong.Lat,
                        Long = viewModel.MemberLocation?.LatLong.Long,
                        Name = viewModel.MemberLocation?.Name ?? "",
                        TimeZoneId = viewModel.Member.TimeZone?.Id ?? Member.DefaultTimeZoneId                        
                    },
                    TopicGroups = viewModel.TopicGroups,
                    TopicIds = viewModel.MemberTopics.Select(x => x.TopicId).ToList(),
                    Topics = viewModel.Topics
                })                
            </form>
        </div>    
})

@section styles
{
    @await Html.PartialAsync("Components/Styles/_Imaging")
}

@section scripts
{
    @await Html.PartialAsync("Components/Scripts/_GoogleLocation")
    @await Html.PartialAsync("Components/Scripts/_Imaging")
    <script src="~/js/odk.wizard.js" asp-append-version="true"></script>
}