@page "/my/groups"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using ODK.Services.Chapters
@using ODK.Web.Common.Routes
@using ODK.Web.Razor.Models.Chapters
@using ODK.Web.Razor.Models.Components
@model IndexModel
@inject IChapterViewModelService ChapterViewModelService
@{
    Layout = "_HomeLayout";
    Model.Title = "My groups";

    var viewModel = await ChapterViewModelService.GetMemberChapters(Model.CurrentMemberId);
    var textsDictionary = viewModel.Texts.ToDictionary(x => x.ChapterId);
}

@await Html.PartialAsync("Components/_Body", new BodyViewModel
{
    Title = "My groups",
    ContentFunc = 
        @<div>
            <section class="section--admin">
                <h5>Owner</h5>
                
                @if (viewModel.Owned.Count > 0)
                {
                    @await Html.PartialAsync("Chapters/Admin/_ChapterTiles", new ChapterTilesViewModel
                    {
                        Chapters = viewModel.Owned.Select(x => new ChapterTileViewModel
                        {
                            Chapter = x,
                            IsOwner = true,
                            Texts = textsDictionary.ContainsKey(x.Id) ? textsDictionary[x.Id] : null
                        }).ToArray()
                    })
                }     
                else
                {
                    <p>
                        You haven't created any groups. 
                        <a href="@OdkRoutes2.MemberGroups.GroupCreate()">Create a group</a>
                    </p>
                }
            </section>

            @if (viewModel.Admin.Any())
            {
                <section class="section--admin">
                    <h5>Manager</h5>
                    @await Html.PartialAsync("Chapters/Admin/_ChapterTiles", new ChapterTilesViewModel
                    {
                        Chapters = viewModel.Admin.Select(x => new ChapterTileViewModel
                        {
                            Chapter = x,
                            IsAdmin = true,
                            Texts = textsDictionary.ContainsKey(x.Id) ? textsDictionary[x.Id] : null
                        }).ToArray()
                    })
                </section>
            }

            <section class="section--admin">
                <h5>Member</h5>
                @if (viewModel.Member.Count > 0)
                {
                    @await Html.PartialAsync("Chapters/Admin/_ChapterTiles", new ChapterTilesViewModel
                    {
                        Chapters = viewModel.Member.Select(x => new ChapterTileViewModel
                        {
                            Chapter = x,
                            Texts = textsDictionary.ContainsKey(x.Id) ? textsDictionary[x.Id] : null
                        }).ToArray()
                    })
                }
                else
                {
                    <p>
                        You aren't a member of any groups.
                        <a href="@OdkRoutes2.Groups.Index()">Find a group</a>
                    </p>
                }
            </section>
        </div>    
})