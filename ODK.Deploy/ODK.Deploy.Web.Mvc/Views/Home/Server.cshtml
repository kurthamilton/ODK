@using ODK.Deploy.Web.Mvc.Models.Home;
@using ODK.Deploy.Web.Mvc.Requests.Home;
@model ServerViewModel
@{
    ViewData["Title"] = "Deploy";
}

<h2>@Model.Name</h2>

<h3>Deployments</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Remote path</th>
            <th>Last backup</th>
            <th>Last upload</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var deployment in Model.Deployments)
        {
            DeploymentRequest deploymentRequest = new DeploymentRequest
            {
                DeploymentId = deployment.Id,
                Name = Model.Name,
                Path = Model.Path
            };

            <tr>
                <td>@deployment.Name</td>
                <td>
                    @Html.ActionLink(deployment.RemotePath, "Server", null,
                        new ServerPathRequest { Name = Model.Name, Path = deployment.RemotePath })
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(deployment.LastBackup))
                    {
                        @Html.ActionLink(deployment.LastBackup, "Server", null,
                            new ServerPathRequest { Name = Model.Name, Path = deployment.LastBackup })
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(deployment.LastUpload))
                    {
                        @Html.ActionLink(deployment.LastUpload, "Server", null,
                            new ServerPathRequest { Name = Model.Name, Path = deployment.LastUpload })
                    }
                </td>
                <td>
                    <div class="d-flex">
                        @using (Html.BeginForm("Backup", null, deploymentRequest, FormMethod.Post))
                        {
                            <button class="btn btn-sm btn-primary" disabled="@(string.IsNullOrEmpty(Model.BackupPath) ? "disabled" : null)">
                                Backup
                            </button>
                        }

                        @using (Html.BeginForm("Upload", null, deploymentRequest, FormMethod.Post))
                        {
                            <button class="btn btn-sm btn-primary" disabled="@(string.IsNullOrEmpty(Model.DeployPath) || string.IsNullOrEmpty(deployment.BuildPath) ? "disabled" : null)">
                                Upload
                            </button>
                        }

                        @using (Html.BeginForm("Release", null, deploymentRequest, FormMethod.Post))
                        {
                            <button class="btn btn-sm btn-primary" disabled="@(string.IsNullOrEmpty(deployment.LastUpload) ? "disabled" : null)">
                                Release
                            </button>
                        }

                        @if (deployment.Offline == true)
                        {
                            using (Html.BeginForm("Online", null, deploymentRequest, FormMethod.Post))
                            {
                                <button class="btn btn-sm btn-success">Put online</button>
                            }
                        }
                        else if (deployment.Offline == false)
                        {
                            using (Html.BeginForm("Offline", null, deploymentRequest, FormMethod.Post))
                            {
                                <button class="btn btn-sm btn-danger">Take offline</button>
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3>Remote files</h3>

@if (Model.Folder.Ancestors.Count > 1)
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            @for (int i = 0; i < Model.Folder.Ancestors.Count - 1; i++)
            {
                var ancestor = Model.Folder.Ancestors.ElementAt(i);
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Server", null, new ServerPathRequest { Name = Model.Name, Path = ancestor.Path })">
                        @(i == 0 ? "Root" : ancestor.Name)
                    </a>
                </li>
            }

            <li class="breadcrumb-item active" aria-current="page">
                @Model.Folder.Name
            </li>
        </ol>
    </nav>
}

<table>
    <tbody>
        @foreach (var folder in Model.Folder.SubFolders)
        {
            <tr>
                <td>
                    @if (Model.CanDeleteChildren)
                    {
                        @using (Html.BeginForm("Delete", null, new ServerPathRequest { Name = Model.Name, Path = folder.Path }, FormMethod.Post))
                        {
                            <button class="btn btn-default text-danger">&times;</button>
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink(folder.Name, "Server", null, new ServerPathRequest { Name = Model.Name, Path = folder.Path, }, new { @class = "d-block" })
                </td>
                <td></td>
            </tr>
        }

        @foreach (var file in Model.Folder.Files)
        {
            <tr>
                <td></td>
                <td>@file.Name</td>
                <td>@file.LastModified.ToString("dd/MM/yyyy HH:mm:ss")</td>
            </tr>
        }
    </tbody>
</table>
