@using ODK.Deploy.Web.Mvc.Models.Home;
@model IndexViewModel
@{
    ViewData["Title"] = "Deploy";
}

<h3>Deployments</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Remote path</th>
            <th>Last backup</th>
            <th>Last upload</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var deployment in Model.Deployments)
        {
            <tr>
                <td>@deployment.Name</td>
                <td>
                    <a href="@Url.Action("Index", null, new { path = deployment.RemotePath })">@deployment.RemotePath</a>
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(deployment.LastBackup))
                    {
                        <a href="@Url.Action("Index", null, new { path = deployment.LastBackup })">@deployment.LastBackup</a>
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(deployment.LastUpload))
                    {
                        <a href="@Url.Action("Index", null, new { path = deployment.LastUpload })">@deployment.LastUpload</a>
                    }
                </td>
                <td>
                    <div class="d-flex">
                        @using (Html.BeginForm("Backup", null, FormMethod.Post))
                        {
                            <input type="hidden" name="id" value="@deployment.Id" />
                            <input type="hidden" name="path" value="@Model.Path" />
                            <button class="btn btn-sm btn-primary">Backup</button>
                        }

                        @using (Html.BeginForm("Upload", null, FormMethod.Post))
                        {
                            <input type="hidden" name="id" value="@deployment.Id" />
                            <input type="hidden" name="path" value="@Model.Path" />
                            <button class="btn btn-sm btn-primary">Upload</button>
                        }


                        @using (Html.BeginForm("Release", null, FormMethod.Post))
                        {
                            <input type="hidden" name="id" value="@deployment.Id" />
                            <input type="hidden" name="path" value="@Model.Path" />
                            <button class="btn btn-sm btn-primary" disabled="@(string.IsNullOrEmpty(deployment.LastUpload) ? "disabled" : null)">
                                Release
                            </button>
                        }

                        @if (!string.IsNullOrEmpty(deployment.OfflineFile))
                        {
                            if (deployment.Offline)
                            {
                                using (Html.BeginForm("Online", null, FormMethod.Post))
                                {
                                    <input type="hidden" name="id" value="@deployment.Id" />
                                    <input type="hidden" name="path" value="@Model.Path" />
                                    <button class="btn btn-sm btn-success">Put online</button>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("Offline", null, FormMethod.Post))
                                {
                                    <input type="hidden" name="id" value="@deployment.Id" />
                                    <input type="hidden" name="path" value="@Model.Path" />
                                    <button class="btn btn-sm btn-danger">Take offline</button>
                                }
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3>Remote files</h3>

@if (Model.Folder.Ancestors.Count > 1)
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            @for (int i = 0; i < Model.Folder.Ancestors.Count - 1; i++)
            {
                var ancestor = Model.Folder.Ancestors.ElementAt(i);
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", null, new { path = ancestor.Path })">
                        @(i == 0 ? "Root" : ancestor.Name)
                    </a>
                </li>
            }

            <li class="breadcrumb-item active" aria-current="page">
                @Model.Folder.Name
            </li>
        </ol>
    </nav>
}

<table>
    <tbody>
        @foreach (var folder in Model.Folder.SubFolders)
        {
            <tr>
                <td>
                    @if (Model.CanDeleteChildren)
                    {
                        @using (Html.BeginForm("Delete", null, FormMethod.Post))
                        {
                            <input type="hidden" name="path" value="@folder.Path" />
                            <input type="hidden" name="parent" value="@Model.Path" />
                            <button class="btn btn-default text-danger">&times;</button>
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink(folder.Name, "Index", null, new { path = folder.Path, }, new { @class = "d-block" })
                </td>
                <td></td>
            </tr>
        }
        @foreach (var file in Model.Folder.Files)
        {
            <tr>
                <td></td>
                <td>@file.Name</td>
                <td>@file.LastModified.ToString("dd/MM/yyyy HH:mm:ss")</td>
            </tr>
        }
    </tbody>
</table>
