using System;
using System.Data;
using Microsoft.Data.SqlClient;

namespace ODK.Data.Sql
{
    public class SqlColumn : ISqlComponent
    {
        private string _sqlName;

        public SqlColumn(string name, int index)
        {
            SetColumnName(name);
            Index = index;
        }

        public bool AutoGenerated { get; private set; }

        public string ColumnName { get; private set; }

        public bool Identity { get; private set; }

        public int Index { get; }

        public string ParameterName { get; private set; }

        public SqlDbType Type { get; private set; }

        private string CastType { get; set; }

        private Type EntityType { get; set; }

        public SqlColumn From<T>()
        {
            EntityType = typeof(T);
            return this;
        }

        public bool IsFrom<T>()
        {
            return typeof(T) == EntityType;
        }

        public SqlColumn HasColumnName(string columnName)
        {
            SetColumnName(columnName);
            return this;
        }

        public SqlColumn HasColumnType(SqlDbType type)
        {
            Type = type;
            return this;
        }

        public SqlColumn IsIdentity()
        {
            AutoGenerated = true;
            Identity = true;
            return this;
        }

        public SqlColumn IsRowVersion()
        {
            AutoGenerated = true;
            CastType = "BIGINT";
            HasColumnType(SqlDbType.BigInt);
            return this;
        }

        public IDataParameter ToParameter(string parameterName, object value)
        {
            return new SqlParameter(parameterName ?? ParameterName, Type) { Value = value ?? DBNull.Value };
        }

        public string ToSql(SqlContext context)
        {
            return _sqlName ??= GetSqlName(context);
        }

        private void SetColumnName(string columnName)
        {
            ColumnName = columnName;
            ParameterName = $"@{columnName}";
        }

        private string GetSqlName(SqlContext context)
        {
            string tableName = context.GetTableName(EntityType);

            string sqlName = $"{tableName}.[{ColumnName}]";

            if (!string.IsNullOrWhiteSpace(CastType))
            {
                sqlName = $"CAST({sqlName} AS {CastType})";
            }

            return sqlName;
        }
    }
}
