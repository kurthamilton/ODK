@using ODK.Services.Authorization
@if (!string.IsNullOrEmpty(Status))
{
    <div class="container subscription-alerts">
        <div class="mt-3">
            @if (Status == "expired")
            {
                <div class="alert alert-danger">
                    Your {{type}} has expired. <a [routerLink]="links.subscription">{{action}}</a>
                </div>
            }
            
            @if (Status == "expiring")
            {
                <div class="alert alert-warning" (close)="onClose()" *ngIf="status === 'expiring' && !hide">
                    Your {{type}} expires {{expiresIn}}. <a [routerLink]="links.subscription">{{action}}</a>
                </div>
            }
        </div>
        
        @if (Disabled)
        {
            <div class="mt-3">
                <div class="alert alert-danger">
                    Your access has expired.
                </div>
            </div>
        }
    </div>
}

@inject IAuthorizationService AuthorizationService
@code {
    bool Disabled { get; set; }

    string? Status { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

}
