@using ODK.Core.Venues
@using ODK.Services.Venues
@model ODK.Web.Razor.Models.Admin.Events.CreateEventFormViewModel
@inject IVenueAdminService VenueAdminService
@{
    IReadOnlyCollection<Venue> venues = await VenueAdminService.GetVenues(Model.CurrentMemberId, Model.ChapterId);
    IReadOnlyCollection<SelectListItem> venueOptions = venues
        .OrderBy(x => x.Name)
        .Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Name })
        .ToArray();
}

<div class="mb-3 form-check">
    @Html.CheckBoxFor(x => x.Public, new { @class = "form-check-input" })
    @Html.LabelFor(x => x.Public, new { @class = "form-check-label" })
</div>

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Name, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Name)
</div>

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Venue, new { @class = "form-label" })
    @await Html.PartialAsync("Components/_Tooltip", "Select an existing venue or create a new venue first on the venues page")
    @Html.DropDownListFor(x => x.Venue, venueOptions, "", new { @class = "form-select" })
    @Html.ValidationMessageFor(x => x.Venue)
</div>

<div class="form-group mb-3 required">
    @Html.LabelFor(x => x.Date, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.Date, new { @class = "form-control", data_datepicker = "" })
    @Html.ValidationMessageFor(x => x.Date)
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Time, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.Time, new { @class = "form-control" })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.Description, new { @class = "form-label" })
    @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
</div>

<div class="form-group mb-3">
    @Html.LabelFor(x => x.ImageUrl, new { @class = "form-label" })
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
</div>